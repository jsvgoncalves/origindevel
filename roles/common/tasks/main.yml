---
- name: Change hostname
  hostname: name=origindevel

- name: Update All packages
  become: yes
  become_user: root
  dnf: >
    name=* state=latest
  when: ansible_os_family == "RedHat"

- name: Install common packages
  become: yes
  become_user: root
  dnf: >
    name={{ item }} state=latest
  when: ansible_os_family == "RedHat"
  with_items:
    - "augeas"
    - "bzr"
    - "bridge-utils"
    - "bzip2"
    - "bind"
    - "btrfs-progs-devel"
    - "ctags"
    - "device-mapper-devel"
    - "ethtool"
    - "e2fsprogs"
    - "fontconfig"
    - "glibc-static"
    - "gnuplot"
    - "httpie"
    - "hg"
    - "jq"
    - "libselinux-devel"
    - "libnetfilter_queue-devel"
    - "make"
    - "mlocate"
    - "ntp"
    - "openldap-clients"
    - "openvswitch"
    - "rubygems"
    - "screen"
    - "socat"
    - "sqlite-devel"
    - "sysstat"
    - "tig"
    - "tmux"
    - "unzip"
    - "vim"
    - "wget"
    - "xfsprogs"
    - "Xvfb"
    - "git"
    - "polkit"
    - "gcc"
    - "make"
    - "automake"
    - "gcc-c++"
    - "kernel-devel"
    - "python"
    - "python-virtualenv"
    - "python-devel"
    - "htop"
    - "nload"
    - "mlocate"
    - "policycoreutils-python"
    - "tmux"
    - "net-tools"
    - "emacs-nox"
    - "httpd-tools"
    - "wget"
    - "curl"
    - "bind-utils"
    - "nc"
    - "docker"
    - "golang"
    - "python3-devel"
    - "ruby"
    - "git"
    - "ethtool"
    - "nodejs"
    - "npm"

- name: Install custom .files
  template: src=bashrc dest={{home_path}}/.bashrc group={{default_user_group}} owner={{default_user}}

- name: Remove current emacs setup
  command: /usr/bin/rm -rf {{home_path}}/.emacs.d

- name: Fetch emacs setup repo
  git: repo=https://github.com/PI-Victor/.emacs.d.git dest={{home_path}}/.emacs.d clone=yes

- name: Copy the .emacs to ~
  command: cp -p {{home_path}}/.emacs.d/.emacs {{home_path}}/

- name: Fetch tmux setup repo
  git: repo=https://github.com/PI-Victor/.tmux_conf.git dest={{home_path}}/.tmux_conf clone=yes

- name: Copy the .tmux.conf to ~
  command: cp -p {{home_path}}/.tmux_conf/.tmux.conf {{home_path}}/

- name: Install bower globally
  command: /usr/bin/npm install -g bower --allow-root

- name: Switch SElinux to permissive mode.
  selinux: policy=targeted state=permissive

- name: Ensure docker is added to systemctl
  become_user: root
  service: name=docker enabled=yes state=started

- name: Copy custom docker-storage
  template: src=docker-storage dest=/etc/sysconfig/docker-storage
  notify:
    - restart docker

- name: Copy custom docker file
  template: src=docker dest=/etc/sysconfig/docker
  notify:
    - restart docker

- name: Create docker user group
  group: name=docker state=present

- name: Add user to docker group
  user: name={{default_user}} groups=docker append=yes

- name: Ensure that firewalld is off
  service: name=firewalld enabled=no state=stopped

- name: Remove dnf cached files
  command: /usr/bin/dnf clean all

- name: Create /scripts
  file: path=/scripts state=directory

- name: Check for and create {{home_path}}/openshift
  file: path={{home_path}}/openshift state=directory

- file: path={{home_path}}/openshift state=directory

# TODO: improve this and move it to a specific config
- name: Check if we have origin v3 built and install it as a service.
  stat: path={{openshift_bin_path}}/openshift
  register: st

- copy: src=files/origin dest={{home_path}}/openshift/origin
  when: st.stat.exists

- template: src=openshift.service dest=/usr/lib/systemd/system/openshift.service
  notify: restart systemctl
  when: st.stat.exists

- service: name=openshift enabled=yes state=started
  when: st.stat.exists

- name: Clone rhcarvalho/openshift-devtools.git
  git: repo=https://github.com/rhcarvalho/openshift-devtools.git dest=/scripts clone=yes
